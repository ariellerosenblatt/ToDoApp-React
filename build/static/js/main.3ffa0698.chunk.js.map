{"version":3,"sources":["logo.svg","controller.js","NewToDo.js","ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","APIKey","NewToDo","_this","this","react_default","a","createElement","className","id","type","checked","props","completed","onChange","markComplete","text","onClick","deleteTask","date","Component","ToDoList","todos","sort","b","sortMethod","created_at","map","x","i","src_NewToDo","key","handleCheck","handleDelete","App","state","newTask","trigger","url","self","Object","assertThisInitialized","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","todo","JSON","parse","responseText","console","log","newTodos","filter","setState","open","setRequestHeader","send","stringify","currentid","deletedTask","xhttpd","controller","newList","handleAdd","newValue","newTaskVALUE","xhttp11","err","getItems","handleEnter","e","code","_this2","fetch","method","headers","x-api-key","then","res","json","data","catch","finally","_this3","react","target","value","onKeyDown","src_ToDoList","React","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oLCApCC,eAAS,0CCuCEC,mLAlBJ,IAAAC,EAAAC,KACP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,mBAC/BJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WAAWC,QAASP,KAAKQ,MAAMC,UAAWC,SAAU,kBAAIX,EAAKS,MAAMG,aAAaZ,EAAKS,MAAMH,OACzGJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaJ,KAAKQ,MAAMI,MACvCX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeS,QAAS,kBAAId,EAAKS,MAAMM,WAAWf,EAAKS,MAAMH,MAA/E,UACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,KACFH,EAAAC,EAAAC,cAAA,aAAIF,EAAAC,EAAAC,cAAA,4BAAJ,IAA4BH,KAAKQ,MAAMO,iBAxB3BC,aC8BPC,mLA1BJ,IAAAlB,EAAAC,KACP,OACIC,EAAAC,EAAAC,cAAA,WACCH,KAAKQ,MAAMU,OAASlB,KAAKQ,MAAMU,MAAMC,KAAK,SAACjB,EAAEkB,GACpD,OAAGrB,EAAKS,MAAMa,WACLnB,EAAEoB,WAAaF,EAAEE,WAAa,GAAG,EAIjCpB,EAAEoB,WAAaF,EAAEE,YAAc,EAAE,IAEzCC,IAAI,SAACC,EAAEC,GAAH,OACLxB,EAAAC,EAAAC,cAACuB,EAAD,CACEC,IAAOH,EAAEnB,GACTA,GAAMmB,EAAEnB,GACRO,KAAMY,EAAEZ,KACRG,KAAMS,EAAEF,WACRb,UAAWe,EAAEf,UACbE,aAAcZ,EAAKS,MAAMoB,YACzBd,WAAYf,EAAKS,MAAMqB,yBA1BJb,aCInBnB,EAAS,qCAqLEiC,6MAlKfC,MAAQ,CACNb,MAAO,GACPc,QAAS,GACTX,YAAY,EACZY,SAAS,KAoBXL,YAAY,SAACvB,GAWT,IAAI6B,EAAM,6BAA+B7B,EAIrC8B,EAAIC,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAArC,IACJuC,EAAQ,IAAIC,eAEhBD,EAAME,mBAAqB,WACvB,GAAwB,IAApBxC,KAAKyC,YAAoC,MAAhBzC,KAAK0C,OAAgB,CAC9C,IAAIC,EAAOC,KAAKC,MAAM7C,KAAK8C,cAC3BC,QAAQC,IAAIL,GAEZ,IAAMM,EAAWd,EAAKJ,MAAMb,MAAMgC,OAAO,SAACP,GAExC,OAAIA,EAAKtC,KAAOA,EACPsC,GAGPA,EAAKlC,WAAY,EACVkC,KAGXR,EAAKgB,SAAS,CACZjC,MAAO+B,SAGkB,IAApBjD,KAAKyC,YACZM,QAAQC,IAAIhD,KAAK8C,eAIzBR,EAAMc,KAAK,MAAOlB,GAAK,GACvBI,EAAMe,iBAAiB,eAAgB,oBACvCf,EAAMe,iBAAiB,YAAaxD,GACpCyC,EAAMgB,KAAKV,KAAKW,UAjCL,CACT9C,WAAW,QAoCjBoB,aAAa,SAAAxB,IHjEN,SAAoBmD,GACzB,IAAIC,EAAcD,EACdE,EAAS,IAAInB,eAEjBmB,EAAON,KAAK,SAAU,6BAA6BK,GAAa,GAChEC,EAAOL,iBAAiB,eAAe,oBACvCK,EAAOL,iBAAiB,YAAaxD,GACrC6D,EAAOJ,OG4DPK,CAAsBtD,GAEtB,IAAIuD,EAAU7D,EAAKgC,MAAMb,MAAMgC,OAAO,SAAA1B,GAAC,OAAEnB,GAAImB,EAAEnB,KAC/CN,EAAKoD,SAAS,CAACjC,MAAM0C,OAIvBC,UAAU,YHjGH,SAAiBC,GAEtB,IAAIC,EACJ,CACInD,KAAMkD,GAGZ,IACE,IAAIE,EAAU,IAAIzB,eAElByB,EAAQZ,KAAK,OAAQ,6BAA6B,GAClDY,EAAQX,iBAAiB,eAAgB,oBACzCW,EAAQX,iBAAiB,YAAaxD,GACtCmE,EAAQV,KAAKV,KAAKW,UAAUQ,IAE5BhB,QAAQC,IAAIe,GAEd,MAAME,GACLlB,QAAQC,IAAIiB,IGiFXN,CAAmB5D,EAAKgC,MAAMC,SAE9BjC,EAAKoD,SAAS,CAACnB,QAAQ,KACvBjC,EAAKmE,cAGPC,YAAY,SAACC,GAEI,UAAXA,EAAEC,MAEJtE,EAAK8D,gGArGY7D,KAAKkE,8CAe1B,IAAAI,EAAAtE,KAEEuE,MAAM,4BAA4B,CAChCC,OAAO,MACPC,QAAQ,CACNC,YAAY7E,KAGf8E,KAAK,SAAAC,GAAG,OAAEA,EAAIC,SACdF,KAAK,SAAAG,GACJ/B,QAAQC,IAAI8B,GACZR,EAAKnB,SAAS,CAACjC,MAAM4D,MAGtBC,MAAM,SAAAd,GAAG,OAAElB,QAAQC,IAAIiB,KAAMe,QAAQ,kBAAIV,EAAKnB,SAAS,CAAClB,SAAUqC,EAAKvC,MAAME,6CAiGvE,IAAAgD,EAAAjF,KACP+C,QAAQC,IAAI,YACZ,IAAIY,EAAU5D,KAAK+B,MAAMb,MACzB,OACEgE,EAAA,qBAAK9E,UAAU,OACb8E,EAAA,wBAAQ9E,UAAU,cAClB8E,EAAA,qBAAK9E,UAAU,OACf8E,EAAA,qCACEA,EAAA,uBAAO9E,UAAU,QAAQM,SAAU,SAAA0D,GAAC,OAAEa,EAAK9B,SAAS,CAACnB,QAAQoC,EAAEe,OAAOC,SAASA,MAAOpF,KAAK+B,MAAMC,QAASqD,UAAWrF,KAAKmE,cAC1He,EAAA,wBAAQ9E,UAAU,YAAYS,QAASb,KAAK6D,WAA5C,YACAqB,EAAA,wBAAQ9E,UAAU,aAAaS,QAAS,kBAAIoE,EAAK9B,SAAS,CAAC9B,YAAY4D,EAAKlD,MAAMV,eAAlF,QAAsGrB,KAAK+B,MAAMV,WAAW,SAAS,SAArI,KAJF,KAwBE6D,EAAA,cAACI,EAAD,CACApE,MAAO0C,EACPvC,WAAYrB,KAAK+B,MAAMV,WACvBO,YAAa5B,KAAK4B,YAClBC,aAAc7B,KAAK6B,wBA3KT0D,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC/F,EAAAyE,EAAA,GAAAO,KAAAhF,EAAAgG,KAAA,UAAqBhB,KAAK,SAAAiB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACPlG,EAAAC,EAAAC,cAACF,EAAAC,EAAMkG,WAAP,KACEnG,EAAAC,EAAAC,cAACkG,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.3ffa0698.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","var APIKey = \"ea812b-af8305-822932-c0383a-7dea17\";\n// ------------XXXX\n\nexport function getAll()\n{\n  var xhttp = new XMLHttpRequest();\n  xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n  xhttp.setRequestHeader(\"x-api-key\", APIKey);\n  xhttp.send();\n}\n\n\nexport function newTask(newValue)\n{\n  var newTaskVALUE = \n  {\n      text: newValue\n}\n\ntry{\n  var xhttp11 = new XMLHttpRequest();\n  \n  xhttp11.open(\"POST\", \"https://cse204.work/todos\", true);\n  xhttp11.setRequestHeader(\"content-type\", \"application/json\");\n  xhttp11.setRequestHeader(\"x-api-key\", APIKey);\n  xhttp11.send(JSON.stringify(newTaskVALUE));\n\n  console.log(newTaskVALUE);\n}\ncatch(err)\n{console.log(err)}\n}\n\n\n\nexport function deleteItem(currentid){\n  var deletedTask = currentid;\n  var xhttpd = new XMLHttpRequest();\n  \n  xhttpd.open(\"DELETE\", \"https://cse204.work/todos/\"+deletedTask, true);\n  xhttpd.setRequestHeader(\"content-type\",\"application/json\");\n  xhttpd.setRequestHeader(\"x-api-key\", APIKey);\n  xhttpd.send();\n}\n\n\nexport function markComplete(currentid){\n    var completeTaskID = currentid;\n    var xhttp22 = new XMLHttpRequest();\n\n    var stat = \n    {\n        completed: true\n    }\n  \n  \n    xhttp22.open(\"PUT\", \"https://cse204.work/todos/\"+completeTaskID, true);\n    xhttp22.setRequestHeader(\"content-type\", \"application/json\");\n    xhttp22.setRequestHeader(\"x-api-key\", APIKey);\n    xhttp22.send(JSON.stringify(stat));\n  }\n\n","import React, { Component } from 'react';\n// import { markComplete } from '../../react-to-do/src/controller.js';\n// import './NewToDo.css';\n// import App from ./App.js\n// import App from './App.js';\n\n\nclass NewToDo extends Component {\n    // constructor(props)\n    // {\n    //     super()\n    //     this.props = props;\n    //     this.state = {\n    //         id:props.id,\n    //         text:props.text,\n    //         date:props.date,\n    //         completed: props.completed,\n    //         // markComplete:props.markComplete,\n    //         // deleteTask:props.delete\n    //     }\n    // }\n  render() {\n    return (\n        <div className=\"userTaskSection\" id=\"userTaskCONTENT\">\n             <div className=\"ALL\"> \n          <div className=\"todo-item\">\n              <input type=\"checkbox\" checked={this.props.completed} onChange={()=>this.props.markComplete(this.props.id)}/>\n            <p className=\"toDoTitle\">{this.props.text}</p>\n          <button className=\"deleteButton\" onClick={()=>this.props.deleteTask(this.props.id)}>Delete</button>\n          <div className=\"date\">\n            <p className=\"space\"> </p>\n          <p> <b> Date Created: </b> {this.props.date}</p>\n          </div>\n          </div>\n          </div>\n       </div>\n    )}\n}\n\nexport default NewToDo;","import React, { Component } from \"react\";\n// import \"./Todo.css\";\nimport NewToDo from \"./NewToDo\";\n\nclass ToDoList extends Component {\n    // constructor(props)\n    // {\n    //     super()\n    //     this.props = props;\n       \n    // }\n  render() {\n    return (\n        <div>\n        {this.props.todos && this.props.todos.sort((a,b)=>{\n  if(this.props.sortMethod) {\n    return a.created_at < b.created_at ? 1:-1\n  }\n  else\n  {\n    return a.created_at < b.created_at ? -1:1\n  }\n}).map((x,i)=>(\n  <NewToDo \n    key = {x.id}\n    id = {x.id}\n    text={x.text}\n    date={x.created_at}\n    completed={x.completed}\n    markComplete={this.props.handleCheck}\n    deleteTask={this.props.handleDelete}\n  />\n))}\n</div>\n    )}\n}\n\nexport default ToDoList;","import logo from './logo.svg';\nimport './App.css';\nimport * as controller from \"./controller\"\nimport * as React from 'react';\nimport NewToDo from './NewToDo';\nimport ToDoList from './ToDoList';\n\n// import React, {useState} from 'react';\nvar APIKey = \"ea812b-af8305-822932-c0383a-7dea17\";\nclass App extends React.Component\n{\n  // constructor(){\n    // super()\n   \n    // this.handleAdd = this.handleAdd.bind(this);\n    // this.handleCheck = this.handleCheck.bind(this);\n    // this.handleDelete = this.handleDelete.bind(this);\n    // this.handleEnter = this.handleEnter.bind(this);\n\n  // }\ncomponentDidMount(){ this.getItems()}\n// shouldComponentUpdate(nextProps, nextState) {\n//   console.log(\"currentstate\", this.state)\n//   console.log(\"nextstate\", nextState)\n//   return true;\n// }\n\nstate = {\n  todos: [],\n  newTask: \"\",\n  sortMethod: false,\n  trigger: false\n}\n\ngetItems()\n{\n  // this.setState({todos:[]})\n  fetch(\"https://cse204.work/todos\",{\n    method:\"GET\",\n    headers:{\n      \"x-api-key\":APIKey\n    }\n  })\n  .then(res=>res.json())\n  .then(data=>{\n    console.log(data);\n    this.setState({todos:data})\n  }\n    )\n  .catch(err=>console.log(err)).finally(()=>this.setState({trigger: !this.state.trigger}))\n}\nhandleCheck=(id)=>\n{\n  // controller.markComplete(id);\n  // this.getItems();\n  // setTimeout(() => {\n  //   this.forceUpdate()\n  // }, 250);\n\n  // completeTodo(event){\n    // event.preventDefault();\n    // var id = event.target.id;\n    var url = \"https://cse204.work/todos/\" + id;\n    var data = {\n      completed: true\n    }\n    var self = this;\n    var xhttp = new XMLHttpRequest();\n    \n    xhttp.onreadystatechange = function() {\n        if (this.readyState === 4 && this.status === 200) {\n            var todo = JSON.parse(this.responseText);\n            console.log(todo);\n\n            const newTodos = self.state.todos.filter((todo) => {\n\n              if (todo.id !== id) {\n                return todo;\n              }\n              else{\n                todo.completed = true;\n                return todo;\n              }\n            });\n            self.setState({\n              todos: newTodos\n            })\n    \n        } else if (this.readyState === 4) {\n            console.log(this.responseText);\n        }\n    };\n\n    xhttp.open(\"PUT\", url, true);\n    xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp.setRequestHeader(\"x-api-key\", APIKey);\n    xhttp.send(JSON.stringify(data));\n  // }\n}\n\nhandleDelete=id=>\n{\n  controller.deleteItem(id);\n  // this.getItems();\n  let newList = this.state.todos.filter(x=>id!=x.id)\n  this.setState({todos:newList})\n\n}\n\nhandleAdd=()=>\n{\n  controller.newTask(this.state.newTask);\n  // setNewTask(\"\");\n  this.setState({newTask:\"\"});\n  this.getItems();\n}\n\nhandleEnter=(e)=>\n{\n  if (e.code === \"Enter\")\n  {\n    this.handleAdd()\n  }\n}\n\n// let list=\n// {this.state.todos && this.state.todos.sort((a,b)=>{\n//   if(this.state.sortMethod) {\n//     return a.created_at < b.created_at ? 1:-1\n//   }\n//   else\n//   {\n//     return a.created_at < b.created_at ? -1:1\n//   }\n// }).map((x,i)=>(\n//   <NewToDo \n//     key = {JSON.stringify(x)}\n//     id = {x.id}\n//     text={x.text}\n//     date={x.created_at}\n//     completed={x.completed}\n//     markComplete={this.handleCheck}\n//     deleteTask={this.handleDelete}\n//   />\n// ))}\n\nrender() {\n  console.log(\"rendered\");\n  let newList = this.state.todos;\n  return(\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div className=\"add\"> \n      <h>To Do List</h>\n        <input className=\"input\" onChange={e=>this.setState({newTask:e.target.value})} value={this.state.newTask} onKeyDown={this.handleEnter}/>\n        <button className=\"addButton\" onClick={this.handleAdd}>Add Task</button>\n        <button className=\"sortButton\" onClick={()=>this.setState({sortMethod:!this.state.sortMethod})}>Sort {this.state.sortMethod?\"Recent\":\"Oldest\"} </button> </div>\n        {/* {this.state.todos && this.state.todos.sort((a,b)=>{\n          if(this.state.sortMethod) {\n            return a.created_at < b.created_at ? 1:-1\n          }\n          else\n          {\n            return a.created_at < b.created_at ? -1:1\n          }\n        }).map((x,i)=>(\n          <NewToDo \n            key = {JSON.stringify(x)}\n            id = {x.id}\n            text={x.text}\n            date={x.created_at}\n            completed={x.completed}\n            markComplete={this.handleCheck}\n            deleteTask={this.handleDelete}\n          />\n        ))} */}\n        <ToDoList\n        todos={newList}\n        sortMethod={this.state.sortMethod}\n        handleCheck={this.handleCheck}\n        handleDelete={this.handleDelete}\n\n         />\n      </header>\n    </div>\n  )\n\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}